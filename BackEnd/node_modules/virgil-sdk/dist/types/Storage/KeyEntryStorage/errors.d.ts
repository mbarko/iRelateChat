import { VirgilError } from '../../VirgilError';
/**
 * Error thrown when the value loaded from persistent storage cannot be
 * parsed as a {@link IKeyEntry} object.
 */
export declare class InvalidKeyEntryError extends VirgilError {
    constructor(message?: string);
}
/**
 * Error thrown from {@link KeyEntryStorage.save} method when saving a
 * a key entry with the name that already exists in store.
 */
export declare class KeyEntryAlreadyExistsError extends VirgilError {
    constructor(name?: string);
}
/**
 * Error thrown from {@link KeyEntryStorage.update} method when updating
 * a key entry that doesn't exist in store.
 */
export declare class KeyEntryDoesNotExistError extends VirgilError {
    constructor(name: string);
}
